import numpy as np
from apache_beam.io import NamedTuple


class WQFields(NamedTuple):

    index_mapping = dict(
        stationcode = x[0],
        datetimestamp = x[1],
        historical= x[2],
        provisional
    )

    "stationcode": 0,
    "isswmp": 1,
    "datetimestamp": 2,
    "historical": 3,
    "provisionalplus": 4,
    "f_record": 5,
    "temp": 6,
    "f_temp": 7,
    "spcond": 8,
    "f_spcond": 9,
    "sal": 10,
    "f_sal": 11,
    "do_pct": np.float32,
    "f_do_pct": "o",
    "do_mgl": np.float32,
    "f_do_mgl": "o",
    "depth": np.float32,
    "f_depth": "o",
    "cdepth": np.float32,
    "f_cdepth": "o",
    "level": np.float32,
    "f_level": "o",
    "clevel": np.float32,
    "f_clevel": "o",
    "ph": np.float32,
    "f_ph": "o",
    "turb": np.float32,
    "f_turb": "o",
    "chlfluor": np.float32,
    "f_chlfluor": "o"


beam_mapping = dict(
    StationCode = str(row[0]),
    isSWMP = str(row[1]),
    DateTimeStamp = np.datetime64(parse(row[2])),
    Historical = np.int(row[3]),
    ProvisionalPlus = np.int(row[4]),
    F_Record = str(row[5]),
    Temp = np.float(row[6]) if row[6] else np.nan,
    F_Temp = str(row[7]),
    SpCond = np.float(row[8]) if row[8] else np.nan,
    F_SpCond = str(row[9]),
    Sal = np.float(row[10]) if row[10] else np.nan,
    F_Sal = str(row[11]),
    DO_Pct = np.float(row[12]) if row[12] else np.nan,
    F_DO_Pct = str(row[13]),
    DO_mgl = np.float(row[14]) if row[14] else np.nan,
    F_DO_mgl = str(row[15]),
    Depth = np.float(row[16]) if row[16] else np.nan,
    F_Depth = str(row[17]),
    cDepth = np.float(row[18]) if row[18] else np.nan,
    F_cDepth = str(row[19]),
    Level = np.float(row[20]) if row[20] else np.nan,
    F_Level = str(row[21]),
    cLevel = np.float(row[22]) if row[22] else np.nan,
    F_cLevel = str(row[23]),
    pH = np.float(row[24]) if row[24] else np.nan,
    F_pH = str(row[25]),
    Turb = np.float(row[26]) if row[26] else np.nan,
    F_Turb = str(row[27]),
    ChlFluor = np.float(row[28]) if row[28] else np.nan,
    F_ChlFluor = str(row[29])
)

# These are based on the original csv file names
# Note that these column names may sometimes have spaces
# Preprocessing steps should get rid of these spaces so don't
# use these constants for processed data...
wq_cols = {
    "StationCode": "O",
    "isSWMP": "O",
    "DateTimeStamp": np.datetime64,
    "Historical": np.int32,
    "ProvisionalPlus": np.int32,
    "F_Record": "O",
    "Temp": np.float32,
    "F_Temp": "O",
    "SpCond": np.float32,
    "F_SpCond": "O",
    "Sal": np.float32,
    "F_Sal": "O",
    "DO_Pct": np.float32,
    "F_DO_Pct": "O",
    "DO_mgl": np.float32,
    "F_DO_mgl": "O",
    "Depth": np.float32,
    "F_Depth": "O",
    "cDepth": np.float32,
    "F_cDepth": "O",
    "Level": np.float32,
    "F_Level": "O",
    "cLevel": np.float32,
    "F_cLevel": "O",
    "pH": np.float32,
    "F_pH": "O",
    "Turb": np.float32,
    "F_Turb": "O",
    "ChlFluor": np.float32,
    "F_ChlFluor": "O"
}


met_cols = {
    'StationCode': "O",
    'isSWMP': "O",
    'DatetimeStamp': np.datetime64,
    'Historical': np.int32,
    'ProvisionalPlus': np.int32,
    'Frequency': np.int32,
    'F_Record': "O",
    'ATemp': np.float32,
    'F_ATemp': "O",
    'RH': np.float32,
    'F_RH': "O",
    'BP': np.float32,
    'F_BP': "O",
    'WSpd': np.float32,
    'F_WSpd': "O",
    'MaxWSpd': np.float32,
    'F_MaxWSpd': "O",
    'MaxWSpdT': "O",
    'Wdir': np.float32,
    'F_Wdir': "O",
    'SDWDir': np.float32,
    'F_SDWDir': "O",
    'TotPAR': np.float32,
    'F_TotPAR': "O",
    'TotPrcp': np.float32,
    'F_TotPrcp': "O",
    'TotSoRad': np.float32,
    'F_TotSoRad': "O",
}

nut_cols = {
    'StationCode': "O",
    'isSWMP': "O",
    'DateTimeStamp': np.datetime64,
    'Historical': np.int32,
    'ProvisionalPlus': np.int32,
    'CollMethd': np.int32,
    'REP': "O",
    'F_Record': "O",
    'PO4F': np.float32,
    'F_PO4F': "O",
    'NH4F': np.float32,
    'F_NH4F': "O",
    'NO2F': np.float32,
    'F_NO2F': "O",
    'NO3F': np.float32,
    'F_NO3F': "O",
    'NO23F': np.float32,
    'F_NO23F': "O",
    'CHLA_N': np.float32,
    'F_CHLA_N': "O",
}

# NOTE: Some of the columns have spaces in the source...
station_cols = {
    'Row',
    'NERR Site ID ': "O",
    'Station Code': "O",
    'Station Name': "O",
    'Lat Long',
    'Latitude ': np.float32,
    ' Longitude': np.float32,
    ' Status': "O",
    ' Active Dates': "O",
    ' State': "O",
    ' Reserve Name': "O",
    'Real Time',
    'HADS ID',
    'GMT Offset': "O",
    'Station Type',
    'Region',
    'isSWMP': "O",
    'Parameters Reported': "O"
}
